generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model usuario {
  id_usuario        Int          @id @default(autoincrement())
  cpf_usuario       String       @unique @db.VarChar(11)
  nome_usuario      String?      @db.VarChar(255)
  tipo_usuario      Int          // Exemplo: 1 = cliente, 2 = gerente, 3 = admin
  email_usuario     String?      @unique @db.VarChar(255)
  senha_usuario     String?      @db.VarChar(255)
  telefone_usuario  String?      @db.VarChar(255)
  oficinas          oficina[]    @relation("UsuarioOficina")
  agendamentos      agendamento[] // Caso este usuário seja cliente de agendamentos
  veiculos          veiculo[]    // Veículos do cliente (se tipo_usuario = cliente)
}

model oficina {
  id_oficina        Int          @id @default(autoincrement())
  nome_oficina      String?      @db.VarChar(255)
  endereco_oficina  String?      @db.VarChar(255)
  cnpj              String?      @unique @db.VarChar(14)
  id_responsavel    Int
  responsavel       usuario      @relation("UsuarioOficina", fields: [id_responsavel], references: [id_usuario], onDelete: Cascade)
  produtos          produto[]
  horarios          horario[]
  servicos          servico[]
  agendamentos      agendamento[]
}

model produto {
  produto_id        Int          @id @default(autoincrement())
  produto_nome      String?      @db.VarChar(255)
  produto_descricao String?      @db.VarChar(255)
  produto_preco     Float?       @db.Float
  produto_marca     String?      @db.VarChar(255)
  id_oficina        Int
  oficina           oficina      @relation(fields: [id_oficina], references: [id_oficina], onDelete: Cascade)
}

model servico {
  servico_id        Int          @id @default(autoincrement())
  servico_nome      String?      @db.VarChar(255)
  servico_descricao String?      @db.VarChar(255)
  preco             Float?
  id_oficina        Int
  oficina           oficina      @relation(fields: [id_oficina], references: [id_oficina], onDelete: Cascade)

  agendamento agendamento[]
}

model horario {
  id_horario      Int       @id @default(autoincrement())
  dia_semana      String    // Exemplo: "Segunda-feira"
  hora_inicio     String    // Exemplo: "08:00"
  hora_fim        String    // Exemplo: "18:00"
  id_oficina      Int
  oficina         oficina   @relation(fields: [id_oficina], references: [id_oficina], onDelete: Cascade)
}

model agendamento {
  id_agendamento  Int       @id @default(autoincrement())
  data_horario    DateTime
  id_cliente      Int
  cliente         usuario    @relation(fields: [id_cliente], references: [id_usuario], onDelete: Cascade)
  id_oficina      Int
  oficina         oficina    @relation(fields: [id_oficina], references: [id_oficina], onDelete: Cascade)
  id_servico      Int
  servico         servico    @relation(fields: [id_servico], references: [servico_id], onDelete: Cascade)
}

model veiculo {
  veiculo_id      Int        @id @default(autoincrement())
  veiculo_marca   String?    @db.VarChar(255)
  veiculo_modelo  String?    @db.VarChar(255)
  veiculo_cor     String?    @db.VarChar(255)
  veiculo_placa   String?    @unique @db.VarChar(255)
  veiculo_motor   String?    @db.VarChar(255)
  veiculo_km      Float?
  id_usuario      Int
  usuario         usuario    @relation(fields: [id_usuario], references: [id_usuario], onDelete: Cascade)
}
